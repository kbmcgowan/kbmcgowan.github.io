{"title":"Easy, readable css interlinear glosses","markdown":{"yaml":{"layout":"post","title":"Easy, readable css interlinear glosses","description":"(surely there is a better way to do this now?)","date":"2009-02-28 15:11:16","categories":"css linguistics","image":"images/bird.png"},"containsRefs":false,"markdown":"\n\nCSS should make the creation and sharing of [standard interlinear\nglosses/translations](http://www.eva.mpg.de/lingua/resources/glossing-rules.php)\neasy; so far it does not.  In general, either the text entry or the\noutput (or both!) is absolutely unacceptable.  For example:\n\n```\n<h1>John 3:16</h1>\n<div class=\"unit\"><p class=\"gk\">οὕτως</p>\n<p class=\"en\">such</p></div>\n<div class=\"unit\"><p class=\"gk\">γὰρ</p>\n<p class=\"en\">for</p></div>\n<div class=\"unit\"><p class=\"gk\">ἠγάπησεν</p>\n<p class=\"en\">loved</p></div>\n```\n\n&nbsp;\n\nNotice that any sense of these translated words having some pairwise\n(let alone phrasal, clause, or sentence!) structure is completely\nshrouded in the cumbersome and obtrusive markup (this would also\nbe a huge pain to type).  The output is admittely <strong>really</strong>\nnice and allows one to do some cool things with javascript, but the\ntext is essentially unusable in this form.  If I wanted 4,000,000\ntags per document I'd use XML/XSLT (p.s. yuck).\n\nThe goal, it seems,is something more like the entry one uses in\ngb4e.sty glosses in a LaTeX document:\n\n```\n\\begin{exe} \n\\ex \n\\gll Wenn jemand in die W\\\"uste zieht ... \\\\ \nIf someone in the desert draws and lives ... \\\\ \n\\trans ‘if one retreats to the desert and ... ’ \n\\end{exe} \n```\n\n&nbsp;\n\ngb4e/LaTeX handle making words that are glosses of one another\nline up in the display.  In short, the goal is separation of content\nfrom display and that's the entire bloody point of CSS, right?\n\nWhat I'd really like is text entry like this:\n\n```\n<div class=\"interlinear\">\n<p class=\"source\">T&aacute; ceol agam. </p>\n<p class=\"gloss\">to be-PRS music-M.PL at-1SG</p>\n<p class=\"target\">I am musical</p>\n</div>\n```\n\n&nbsp;\n\nIn addition to the problem that CSS is basically incapable of doing any kind of interesting text alignment, this example introduces the complication of aligning multiple words to a single word.  What I have so far is text entry using the CSS inline-table attribute like this:\n\n```\n<div class=\"interlinear\">\n<p class=\"gloss\">\n    <div class=\"gll\">T&aacute;<br />to be-PRS</div>\n    <div class=\"gll\">ceol<br />music-M.PL</div>\n    <div class=\"gll\">agam<br />at-1SG</div>\n</p>\n<p class=\"translation\">I am musical</p>\n</div>\n```\n\n&nbsp;\n\nwhich, I think, still totally sucks.  There's less markup than the first version so it's *slightly* better, but it's still not very good.  Two good things, though, are that the CSS is obvious, simple and standard ([interlinear.css](/css/interlinear.css)) and the output is nice:\n\n<link rel=\"stylesheet\" href=\"/css/interlinear.css\">\n\n<ol class=\"interlinear\">\n<li> Irish\n    <p class=\"gloss\">\n\t<div class=\"gll\">T&aacute;<br />to be-PRS</div>\n\t<div class=\"gll\">ceol<br />music-M.PL</div>\n\t<div class=\"gll\">agam<br />at-1SG</div>\n    </p>\n  <p class=\"translation\">I am musical</p>\n</li>\n\n<li> Latin\n    <p class=\"gloss\">\n\t<div class=\"gll\">In <br /> in </div>\n\t<div class=\"gll\">nomine <br /> name </div>\n\t<div class=\"gll\">Patris <br /> Father </div>\n\t<div class=\"gll\">et <br /> and </div>\n\t<div class=\"gll\">Filii <br /> Son </div>\n\t<div class=\"gll\">et <br /> and </div>\n\t<div class=\"gll\">Spiritus <br /> Spirit </div>\n\t<div class=\"gll\">Sancti <br /> Holy </div>\n    </p> <p class=\"translation\">In the name of the Father, the Son and the Holy Spirit.</p>\n</li>\n\n<li> Classical Japanese (Ariwara no Narihira courtesy E. Alpert)\n    <p class=\"gloss\">\n\t<div class=\"gll\">tsuki<br /> moon</div>\n\t<div class=\"gll\">ya<br /> Q</div>\n\t<div class=\"gll\">aranu<br /> is-NEG</div>\n\t<div class=\"gll\">haru<br /> spring</div>\n\t<div class=\"gll\">ya<br /> Q</div>\n\t<div class=\"gll\">mukashi<br /> long.ago</div>\n\t<div class=\"gll\">no<br /> GEN</div>\n\t<div class=\"gll\">haru<br /> spring</div>\n\t<div class=\"gll\">naranu<br /> COP-NEG</div>\n    </p> <p class=\"glt\">&ldquo;Isn't this the moon? And isn't spring the way it used to be?&rdquo;</p>\n</li>\n</ol>\n\n&nbsp;\n\nI have a little javascript hack that will assemble these inline-table\ndivs at run time from the first type of HTML.  This allows me to\nwrite markup in the style I want but it's gross and still doesn't\nfacilitate searching.  I'll update this page when I come up with\nsomething better (or you could e-mail me if you have a better idea).\n","srcMarkdownNoYaml":"\n\nCSS should make the creation and sharing of [standard interlinear\nglosses/translations](http://www.eva.mpg.de/lingua/resources/glossing-rules.php)\neasy; so far it does not.  In general, either the text entry or the\noutput (or both!) is absolutely unacceptable.  For example:\n\n```\n<h1>John 3:16</h1>\n<div class=\"unit\"><p class=\"gk\">οὕτως</p>\n<p class=\"en\">such</p></div>\n<div class=\"unit\"><p class=\"gk\">γὰρ</p>\n<p class=\"en\">for</p></div>\n<div class=\"unit\"><p class=\"gk\">ἠγάπησεν</p>\n<p class=\"en\">loved</p></div>\n```\n\n&nbsp;\n\nNotice that any sense of these translated words having some pairwise\n(let alone phrasal, clause, or sentence!) structure is completely\nshrouded in the cumbersome and obtrusive markup (this would also\nbe a huge pain to type).  The output is admittely <strong>really</strong>\nnice and allows one to do some cool things with javascript, but the\ntext is essentially unusable in this form.  If I wanted 4,000,000\ntags per document I'd use XML/XSLT (p.s. yuck).\n\nThe goal, it seems,is something more like the entry one uses in\ngb4e.sty glosses in a LaTeX document:\n\n```\n\\begin{exe} \n\\ex \n\\gll Wenn jemand in die W\\\"uste zieht ... \\\\ \nIf someone in the desert draws and lives ... \\\\ \n\\trans ‘if one retreats to the desert and ... ’ \n\\end{exe} \n```\n\n&nbsp;\n\ngb4e/LaTeX handle making words that are glosses of one another\nline up in the display.  In short, the goal is separation of content\nfrom display and that's the entire bloody point of CSS, right?\n\nWhat I'd really like is text entry like this:\n\n```\n<div class=\"interlinear\">\n<p class=\"source\">T&aacute; ceol agam. </p>\n<p class=\"gloss\">to be-PRS music-M.PL at-1SG</p>\n<p class=\"target\">I am musical</p>\n</div>\n```\n\n&nbsp;\n\nIn addition to the problem that CSS is basically incapable of doing any kind of interesting text alignment, this example introduces the complication of aligning multiple words to a single word.  What I have so far is text entry using the CSS inline-table attribute like this:\n\n```\n<div class=\"interlinear\">\n<p class=\"gloss\">\n    <div class=\"gll\">T&aacute;<br />to be-PRS</div>\n    <div class=\"gll\">ceol<br />music-M.PL</div>\n    <div class=\"gll\">agam<br />at-1SG</div>\n</p>\n<p class=\"translation\">I am musical</p>\n</div>\n```\n\n&nbsp;\n\nwhich, I think, still totally sucks.  There's less markup than the first version so it's *slightly* better, but it's still not very good.  Two good things, though, are that the CSS is obvious, simple and standard ([interlinear.css](/css/interlinear.css)) and the output is nice:\n\n<link rel=\"stylesheet\" href=\"/css/interlinear.css\">\n\n<ol class=\"interlinear\">\n<li> Irish\n    <p class=\"gloss\">\n\t<div class=\"gll\">T&aacute;<br />to be-PRS</div>\n\t<div class=\"gll\">ceol<br />music-M.PL</div>\n\t<div class=\"gll\">agam<br />at-1SG</div>\n    </p>\n  <p class=\"translation\">I am musical</p>\n</li>\n\n<li> Latin\n    <p class=\"gloss\">\n\t<div class=\"gll\">In <br /> in </div>\n\t<div class=\"gll\">nomine <br /> name </div>\n\t<div class=\"gll\">Patris <br /> Father </div>\n\t<div class=\"gll\">et <br /> and </div>\n\t<div class=\"gll\">Filii <br /> Son </div>\n\t<div class=\"gll\">et <br /> and </div>\n\t<div class=\"gll\">Spiritus <br /> Spirit </div>\n\t<div class=\"gll\">Sancti <br /> Holy </div>\n    </p> <p class=\"translation\">In the name of the Father, the Son and the Holy Spirit.</p>\n</li>\n\n<li> Classical Japanese (Ariwara no Narihira courtesy E. Alpert)\n    <p class=\"gloss\">\n\t<div class=\"gll\">tsuki<br /> moon</div>\n\t<div class=\"gll\">ya<br /> Q</div>\n\t<div class=\"gll\">aranu<br /> is-NEG</div>\n\t<div class=\"gll\">haru<br /> spring</div>\n\t<div class=\"gll\">ya<br /> Q</div>\n\t<div class=\"gll\">mukashi<br /> long.ago</div>\n\t<div class=\"gll\">no<br /> GEN</div>\n\t<div class=\"gll\">haru<br /> spring</div>\n\t<div class=\"gll\">naranu<br /> COP-NEG</div>\n    </p> <p class=\"glt\">&ldquo;Isn't this the moon? And isn't spring the way it used to be?&rdquo;</p>\n</li>\n</ol>\n\n&nbsp;\n\nI have a little javascript hack that will assemble these inline-table\ndivs at run time from the first type of HTML.  This allows me to\nwrite markup in the style I want but it's gross and still doesn't\nfacilitate searching.  I'll update this page when I come up with\nsomething better (or you could e-mail me if you have a better idea).\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":false,"output-file":"2009-02-28-css-interlinear-glosses.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.553","theme":["journal","../../yeti-colors.scss"],"fontsize":"1.1em","title-block-banner":false,"layout":"post","title":"Easy, readable css interlinear glosses","description":"(surely there is a better way to do this now?)","date":"2009-02-28 15:11:16","categories":"css linguistics","image":"images/bird.png"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}